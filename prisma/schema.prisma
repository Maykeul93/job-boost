// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  plan      Plan     @default(FREE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resumes      Resume[]
  coverLetters CoverLetter[]
  applications Application[]
  sessions     Session[]

  @@map("users")
}

model Resume {
  id         String   @id @default(cuid())
  userId     String
  title      String
  templateId String
  lang       Language @default(FR)
  data       Json
  updatedAt  DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  applications Application[]

  @@map("resumes")
}

model CoverLetter {
  id         String   @id @default(cuid())
  userId     String
  templateId String
  jobText    String?
  variables  Json
  bodyHtml   String
  updatedAt  DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  applications Application[]

  @@map("cover_letters")
}

model Template {
  id         String       @id @default(cuid())
  type       TemplateType
  name       String
  html       String
  css        String?
  previewPng String?
  isPremium  Boolean      @default(false)

  @@map("templates")
}

model Application {
  id            String            @id @default(cuid())
  userId        String
  company       String
  position      String
  appliedAt     DateTime
  status        ApplicationStatus @default(APPLIED)
  followUpAt    DateTime?
  notes         String?
  resumeId      String?
  coverLetterId String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  resume      Resume?      @relation(fields: [resumeId], references: [id])
  coverLetter CoverLetter? @relation(fields: [coverLetterId], references: [id])

  @@map("applications")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Plan {
  FREE
  PRO
}

enum Language {
  FR
  EN
}

enum TemplateType {
  RESUME
  LETTER
}

enum ApplicationStatus {
  APPLIED
  INTERVIEW
  OFFER
  REJECTED
  WITHDRAWN
}
